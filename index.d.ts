/** Declaration file generated by dts-gen */

export function addonSearch(categoryID: number, gameId: number, gameVersion: string, index: number, pageSize: number, searchFilter: string, sectionId: number, sort: number): TwitchAddon[];

export function getAddonByFingerPrint(arr: number): FingerprintResult;

export function getAddonDescription(addonID: number): string;

export function getAddonFileChangelog(addonID: number, fileID: number): string;

export function getAddonFileInformation(addonID: number, fileID: number): File;

export function getAddonFiles(addonID: number): File[];

export function getAddonInfo(addonID: number): TwitchAddon;

export function getAddonsDatabaseTimestamp(): Date;

export function getCategoryInfo(categoryID: number): Category;

export function getCategoryList(): Category[];

export function getCategorySectionInfo(sectionId: number): Category[];

export function getCategoryTimestamp(): string;

export function getFeaturedAddons(gameId: number, addonIds: number[], featuredCount: number, popularCount: number, updatedCount: number): TwitchAddon[];

export function getGameInfo(gameId: number): Game;

export function getGameTimestamp(): Date;

export function getGamesList(supportsAddons: boolean): Game[];

export function getMinecraftVersionInfo(versionString: string): MinecraftVersion;

export function getMinecraftVersionList(): MinecraftVersion[];

export function getMinecraftVersionTimestamp(): Date;

export function getModloaderVersionInfo(versionString: string): Modloader;

export function getModloaderVersionList(): Modloader[];

export function getModloaderVersionTimestamp(): Date;

export function getMultipleAddons(addonIDArray: number[]): TwitchAddon[];

export interface Author {
    name: string;
    url: string;
    projectId: number;
    id: number;
    projectTitleId?: number;
    projectTitleTitle: string;
    userId: number;
    twitchId: number;
}

export interface Attachment {
    id: number;
    projectId: number;
    description: string;
    isDefault: boolean;
    thumbnailUrl: string;
    title: string;
    url: string;
    status: number;
}

export interface Module {
    foldername: string;
    fingerprint: string;
    type: number;
}

export interface SortableGameVersion {
    gameVersionPadded: string;
    gameVersion: string;
    gameVersionReleaseDate: Date;
    gameVersionName: string;
}

export interface File {
    id: number;
    displayName: string;
    fileName: string;
    fileDate: Date;
    fileLength: number;
    releaseType: number;
    fileStatus: number;
    downloadUrl: string;
    isAlternate: boolean;
    alternateFileId: number;
    dependencies: Dependency[];
    isAvailable: boolean;
    modules: Module[];
    packageFingerprint: string;
    gameVersion: string[];
    sortableGameVersion: SortableGameVersion[];
    installMetadata?: any;
    changelog?: any;
    hasInstallScript: boolean;
    isCompatibleWithClient: boolean;
    categorySectionPackageType: number;
    restrictProjectFileAccess: number;
    projectStatus: number;
    renderCacheId: number;
    fileLegacyMappingId?: any;
    projectId: number;
    ProjectFileId?: any;
    parentFileLegacyMappingId?: any;
    fileTypeId?: any;
    exposeAsAlternative?: any;
    packageFingerprintId: number;
    gameVersionDateReleased: Date;
    gameVersionMappingId: number;
    gameVersionId: number;
    gameId: number;
    isServerPack: boolean;
    serverPackFileId?: number;
}

export interface AddonCategory {
    categoryId: number;
    name: string;
    url: string;
    avatarUrl: string;
    parentId: number;
    rootId: number;
    projectId: number;
    avatarId: number;
    gameId: number;
}

export interface CategorySection {
    id: number;
    gameId: number;
    name: string;
    packageType: number;
    path: string;
    initialInclusionPattern: string;
    extraIncludePattern?: any;
    gameCategoryId: number;
}

export interface GameVersionLatestFile {
    gameVersion: string;
    projectFileId: number;
    projectFileName: string;
    fileType: number;
}

export interface TwitchAddon {
    id: number;
    name: string;
    authors: Author[];
    attachments: Attachment[];
    websiteUrl: string;
    gameId: number;
    summary: string;
    defaultFileId: number;
    downloadCount: number;
    latestFiles: File[];
    categories: AddonCategory[];
    status: number;
    primaryCategoryId: number;
    categorySection: CategorySection;
    slug: string;
    gameVersionLatestFiles: GameVersionLatestFile[];
    isFeatured: boolean;
    popularityScore: number;
    gamePopularityRank: number;
    primaryLanguage: string;
    gameSlug: string;
    gameName: string;
    portalName: string;
    dateModified: Date;
    dateCreated: Date;
    dateReleased: Date;
    isAvailable: boolean;
    isExperiemental: boolean;
}

export interface ExactMatch {
    id: number;
    file: File;
    latestFiles: File[];
}

export interface PartialMatchFingerprints {
}

export interface FingerprintResult {
    isCacheBuilt: boolean;
    exactMatches: ExactMatch[];
    exactFingerprints: number[];
    partialMatches: any[];
    partialMatchFingerprints: PartialMatchFingerprints;
    installedFingerprints: number[];
    unmatchedFingerprints: any[];
}

export interface Category {
    id: number;
    name: string;
    slug: string;
    avatarUrl: string;
    dateModified: Date;
    parentGameCategoryId?: number;
    rootGameCategoryId?: number;
    gameId: number;
}

export interface Dependency {
    id: number;
    addonId: number;
    type: number;
    fileId: number;
}

export interface GameFile {
    id: number;
    gameId: number;
    isRequired: boolean;
    fileName: string;
    fileType: number;
    platformType: number;
}

export interface GameDetectionHint {
    id: number;
    hintType: number;
    hintPath: string;
    hintKey?: any;
    hintOptions: number;
    gameId: number;
}

export interface Game {
    id: number;
    name: string;
    slug: string;
    dateModified: Date;
    gameFiles: GameFile[];
    gameDetectionHints: GameDetectionHint[];
    fileParsingRules: any[];
    categorySections: CategorySection[];
    maxFreeStorage: number;
    maxPremiumStorage: number;
    maxFileSize: number;
    addonSettingsFolderFilter?: any;
    addonSettingsStartingFolder?: any;
    addonSettingsFileFilter?: any;
    addonSettingsFileRemovalFilter?: any;
    supportsAddons: boolean;
    supportsPartnerAddons: boolean;
    supportedClientConfiguration: number;
    supportsNotifications: boolean;
    profilerAddonId: number;
    twitchGameId: number;
    clientGameSettingsId: number;
}

export interface MinecraftVersion {
    id: number;
    gameVersionId: number;
    versionString: string;
    jarDownloadUrl: string;
    jsonDownloadUrl: string;
    approved: boolean;
    dateModified: Date;
    gameVersionTypeId: number;
    gameVersionStatus: number;
    gameVersionTypeStatus: number;
}

export interface Modloader {
    id: number;
    gameVersionId: number;
    minecraftGameVersionId: number;
    forgeVersion: string;
    name: string;
    type: number;
    downloadUrl: string;
    filename: string;
    installMethod: number;
    latest: boolean;
    recommended: boolean;
    approved: boolean;
    dateModified: Date;
    mavenVersionString: string;
    versionJson: string;
    librariesInstallLocation: string;
    minecraftVersion: string;
    additionalFilesJson?: any;
    modLoaderGameVersionId: number;
    modLoaderGameVersionTypeId: number;
    modLoaderGameVersionStatus: number;
    modLoaderGameVersionTypeStatus: number;
    mcGameVersionId: number;
    mcGameVersionTypeId: number;
    mcGameVersionStatus: number;
    mcGameVersionTypeStatus: number;
    installProfileJson?: any;
}